ARM GAS  C:\Users\User\AppData\Local\Temp\ccGRz4aL.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.Error_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	Error_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	Error_Handler:
  26              	.LFB49:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * Program will wake up, attempt to measure internal temperature, turn on a tcxo,
   8:Core/Src/main.c ****   * broadcast a packet on LoRa, and then return to deep sleep for ie 5 minutes.
   9:Core/Src/main.c ****   *
  10:Core/Src/main.c ****   * @attention
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  13:Core/Src/main.c ****   * All rights reserved.
  14:Core/Src/main.c ****   *
  15:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  16:Core/Src/main.c ****   * in the root directory of this software component.
  17:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  18:Core/Src/main.c ****   *
  19:Core/Src/main.c ****   ******************************************************************************
  20:Core/Src/main.c ****   */
  21:Core/Src/main.c **** /* USER CODE END Header */
  22:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  23:Core/Src/main.c **** #include "main.h"
  24:Core/Src/main.c **** #include "i2c.h"
  25:Core/Src/main.c **** #include "spi.h"
  26:Core/Src/main.c **** #include "usart.h"
  27:Core/Src/main.c **** #include "gpio.h"
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  31:Core/Src/main.c **** #include "sx126x.h"
  32:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccGRz4aL.s 			page 2


  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c **** 	bool RadioBusy=false;
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  88:Core/Src/main.c **** //TODO: measure power usage, turn on/off gpios (set as inputs?) to decrease current draw
  89:Core/Src/main.c ****   /* USER CODE END SysInit */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccGRz4aL.s 			page 3


  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   MX_I2C1_Init();
  94:Core/Src/main.c ****   MX_SPI1_Init();
  95:Core/Src/main.c ****   MX_USART1_UART_Init();
  96:Core/Src/main.c ****   MX_USART2_UART_Init();
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   // CS pin should default high
 100:Core/Src/main.c ****    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, GPIO_PIN_SET);
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****    RadioBusy = true;
 103:Core/Src/main.c ****    while (RadioBusy)	//wait for modem to turn on
 104:Core/Src/main.c ****    {
 105:Core/Src/main.c **** 	   RadioBusy = HAL_GPIO_ReadPin(BUSY_GPIO_Port, BUSY_Pin);
 106:Core/Src/main.c ****    }
 107:Core/Src/main.c ****    uint8_t cfg=0;
 108:Core/Src/main.c ****    sx126x_set_standby(&hspi1,cfg);
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /*
 112:Core/Src/main.c ****  *TODO: create functions for my code to interface with the sx1262:
 113:Core/Src/main.c ****   - sx126x_hal_reset
 114:Core/Src/main.c ****   - sx126x_hal_wakeup
 115:Core/Src/main.c ****   - sx126x_hal_write
 116:Core/Src/main.c ****   - sx126x_hal_read
 117:Core/Src/main.c ****  */
 118:Core/Src/main.c **** /*
 119:Core/Src/main.c ****  * 1. If not in STDBY_RC mode, then go to this mode with the command SetStandby(...)
 120:Core/Src/main.c ****  * 2. Define the protocol (LoRaÂ® or FSK) with the command SetPacketType(...)
 121:Core/Src/main.c ****  * 3. Define the RF frequency with the command SetRfFrequency(...)
 122:Core/Src/main.c ****  * 4. Define the Power Amplifier configuration with the command SetPaConfig(...)
 123:Core/Src/main.c ****  * 5. Define output power and ramping time with the command SetTxParams(...)
 124:Core/Src/main.c ****  * 6. Define where the data payload will be stored with the command SetBufferBaseAddress(...)
 125:Core/Src/main.c ****  * 7. Send the payload to the data buffer with the command WriteBuffer(...)
 126:Core/Src/main.c ****  * 8. Define the modulation parameter according to the chosen protocol with the command SetModulati
 127:Core/Src/main.c ****  * 9. Define the frame format to be used with the command SetPacketParams(...)2
 128:Core/Src/main.c ****  * 10. Configure DIO and IRQ: use the command SetDioIrqParams(...) to select TxDone IRQ and map thi
 129:Core/Src/main.c ****  * DIO2 or DIO3)
 130:Core/Src/main.c ****  * 11. Define Sync Word value: use the command WriteReg(...) to write the value of the register via
 131:Core/Src/main.c ****  * 12. Set the circuit in transmitter mode to start transmission with the command SetTx(). Use the 
 132:Core/Src/main.c ****  * Timeout
 133:Core/Src/main.c ****  * 13. Wait for the IRQ TxDone or Timeout: once the packet has been sent the chip goes automaticall
 134:Core/Src/main.c ****  * 14. Clear the IRQ TxDone flag
 135:Core/Src/main.c ****  */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** 
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* USER CODE END 2 */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* Infinite loop */
 142:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 143:Core/Src/main.c ****   //TODO some form of state machine?
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   while (1)
 146:Core/Src/main.c ****   {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccGRz4aL.s 			page 4


 147:Core/Src/main.c ****     /* USER CODE END WHILE */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 150:Core/Src/main.c ****   }
 151:Core/Src/main.c ****   /* USER CODE END 3 */
 152:Core/Src/main.c **** }
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** /**
 155:Core/Src/main.c ****   * @brief System Clock Configuration
 156:Core/Src/main.c ****   * @retval None
 157:Core/Src/main.c ****   */
 158:Core/Src/main.c **** void SystemClock_Config(void)
 159:Core/Src/main.c **** {
 160:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 161:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 162:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 165:Core/Src/main.c ****   */
 166:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 169:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 170:Core/Src/main.c ****   */
 171:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 172:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 173:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 174:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 176:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 177:Core/Src/main.c ****   {
 178:Core/Src/main.c ****     Error_Handler();
 179:Core/Src/main.c ****   }
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 184:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 185:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 186:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 187:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 188:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 191:Core/Src/main.c ****   {
 192:Core/Src/main.c ****     Error_Handler();
 193:Core/Src/main.c ****   }
 194:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_USART2
 195:Core/Src/main.c ****                               |RCC_PERIPHCLK_I2C1;
 196:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 197:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 198:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 199:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 200:Core/Src/main.c ****   {
 201:Core/Src/main.c ****     Error_Handler();
 202:Core/Src/main.c ****   }
 203:Core/Src/main.c **** }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccGRz4aL.s 			page 5


 204:Core/Src/main.c **** 
 205:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 206:Core/Src/main.c **** 
 207:Core/Src/main.c **** /* USER CODE END 4 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c **** /**
 210:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 211:Core/Src/main.c ****   * @retval None
 212:Core/Src/main.c ****   */
 213:Core/Src/main.c **** void Error_Handler(void)
 214:Core/Src/main.c **** {
  27              		.loc 1 214 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 215:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 216:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 217:Core/Src/main.c ****   __disable_irq();
  33              		.loc 1 217 3 view .LVU1
  34              	.LBB4:
  35              	.LBI4:
  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccGRz4aL.s 			page 6


  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
ARM GAS  C:\Users\User\AppData\Local\Temp\ccGRz4aL.s 			page 7


  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  37              		.loc 2 140 27 view .LVU2
  38              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  39              		.loc 2 142 3 view .LVU3
  40              		.syntax divided
  41              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccGRz4aL.s 			page 8


  42 0000 72B6     		cpsid i
  43              	@ 0 "" 2
  44              		.thumb
  45              		.syntax unified
  46              	.L2:
  47              	.LBE5:
  48              	.LBE4:
 218:Core/Src/main.c ****   while (1)
  49              		.loc 1 218 3 discriminator 1 view .LVU4
 219:Core/Src/main.c ****   {
 220:Core/Src/main.c ****   }
  50              		.loc 1 220 3 discriminator 1 view .LVU5
 218:Core/Src/main.c ****   while (1)
  51              		.loc 1 218 9 discriminator 1 view .LVU6
  52 0002 FEE7     		b	.L2
  53              		.cfi_endproc
  54              	.LFE49:
  56              		.section	.text.SystemClock_Config,"ax",%progbits
  57              		.align	1
  58              		.global	SystemClock_Config
  59              		.syntax unified
  60              		.code	16
  61              		.thumb_func
  63              	SystemClock_Config:
  64              	.LFB48:
 159:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  65              		.loc 1 159 1 view -0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 104
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69 0000 00B5     		push	{lr}
  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 4
  72              		.cfi_offset 14, -4
  73 0002 9BB0     		sub	sp, sp, #108
  74              	.LCFI1:
  75              		.cfi_def_cfa_offset 112
 160:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  76              		.loc 1 160 3 view .LVU8
 160:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  77              		.loc 1 160 22 is_stmt 0 view .LVU9
  78 0004 3422     		movs	r2, #52
  79 0006 0021     		movs	r1, #0
  80 0008 0DA8     		add	r0, sp, #52
  81 000a FFF7FEFF 		bl	memset
  82              	.LVL0:
 161:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  83              		.loc 1 161 3 is_stmt 1 view .LVU10
 161:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  84              		.loc 1 161 22 is_stmt 0 view .LVU11
  85 000e 1422     		movs	r2, #20
  86 0010 0021     		movs	r1, #0
  87 0012 08A8     		add	r0, sp, #32
  88 0014 FFF7FEFF 		bl	memset
  89              	.LVL1:
 162:Core/Src/main.c **** 
  90              		.loc 1 162 3 is_stmt 1 view .LVU12
ARM GAS  C:\Users\User\AppData\Local\Temp\ccGRz4aL.s 			page 9


 162:Core/Src/main.c **** 
  91              		.loc 1 162 28 is_stmt 0 view .LVU13
  92 0018 2022     		movs	r2, #32
  93 001a 0021     		movs	r1, #0
  94 001c 6846     		mov	r0, sp
  95 001e FFF7FEFF 		bl	memset
  96              	.LVL2:
 166:Core/Src/main.c **** 
  97              		.loc 1 166 3 is_stmt 1 view .LVU14
  98 0022 1B49     		ldr	r1, .L10
  99 0024 0A68     		ldr	r2, [r1]
 100 0026 1B4B     		ldr	r3, .L10+4
 101 0028 1A40     		ands	r2, r3
 102 002a 8023     		movs	r3, #128
 103 002c 1B01     		lsls	r3, r3, #4
 104 002e 1343     		orrs	r3, r2
 105 0030 0B60     		str	r3, [r1]
 171:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 106              		.loc 1 171 3 view .LVU15
 171:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 107              		.loc 1 171 36 is_stmt 0 view .LVU16
 108 0032 1023     		movs	r3, #16
 109 0034 0D93     		str	r3, [sp, #52]
 172:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 110              		.loc 1 172 3 is_stmt 1 view .LVU17
 172:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 111              		.loc 1 172 30 is_stmt 0 view .LVU18
 112 0036 0F3B     		subs	r3, r3, #15
 113 0038 1393     		str	r3, [sp, #76]
 173:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 114              		.loc 1 173 3 is_stmt 1 view .LVU19
 173:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 115              		.loc 1 173 41 is_stmt 0 view .LVU20
 116 003a 0023     		movs	r3, #0
 117 003c 1493     		str	r3, [sp, #80]
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 118              		.loc 1 174 3 is_stmt 1 view .LVU21
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 119              		.loc 1 174 35 is_stmt 0 view .LVU22
 120 003e A022     		movs	r2, #160
 121 0040 1202     		lsls	r2, r2, #8
 122 0042 1592     		str	r2, [sp, #84]
 175:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 123              		.loc 1 175 3 is_stmt 1 view .LVU23
 175:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 124              		.loc 1 175 34 is_stmt 0 view .LVU24
 125 0044 1693     		str	r3, [sp, #88]
 176:Core/Src/main.c ****   {
 126              		.loc 1 176 3 is_stmt 1 view .LVU25
 176:Core/Src/main.c ****   {
 127              		.loc 1 176 7 is_stmt 0 view .LVU26
 128 0046 0DA8     		add	r0, sp, #52
 129 0048 FFF7FEFF 		bl	HAL_RCC_OscConfig
 130              	.LVL3:
 176:Core/Src/main.c ****   {
 131              		.loc 1 176 6 view .LVU27
 132 004c 0028     		cmp	r0, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccGRz4aL.s 			page 10


 133 004e 19D1     		bne	.L7
 183:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 134              		.loc 1 183 3 is_stmt 1 view .LVU28
 183:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 135              		.loc 1 183 31 is_stmt 0 view .LVU29
 136 0050 0F23     		movs	r3, #15
 137 0052 0893     		str	r3, [sp, #32]
 185:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 138              		.loc 1 185 3 is_stmt 1 view .LVU30
 185:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 139              		.loc 1 185 34 is_stmt 0 view .LVU31
 140 0054 0023     		movs	r3, #0
 141 0056 0993     		str	r3, [sp, #36]
 186:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 142              		.loc 1 186 3 is_stmt 1 view .LVU32
 186:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 143              		.loc 1 186 35 is_stmt 0 view .LVU33
 144 0058 0A93     		str	r3, [sp, #40]
 187:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 145              		.loc 1 187 3 is_stmt 1 view .LVU34
 187:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 146              		.loc 1 187 36 is_stmt 0 view .LVU35
 147 005a 0B93     		str	r3, [sp, #44]
 188:Core/Src/main.c **** 
 148              		.loc 1 188 3 is_stmt 1 view .LVU36
 188:Core/Src/main.c **** 
 149              		.loc 1 188 36 is_stmt 0 view .LVU37
 150 005c 0C93     		str	r3, [sp, #48]
 190:Core/Src/main.c ****   {
 151              		.loc 1 190 3 is_stmt 1 view .LVU38
 190:Core/Src/main.c ****   {
 152              		.loc 1 190 7 is_stmt 0 view .LVU39
 153 005e 0021     		movs	r1, #0
 154 0060 08A8     		add	r0, sp, #32
 155 0062 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 156              	.LVL4:
 190:Core/Src/main.c ****   {
 157              		.loc 1 190 6 view .LVU40
 158 0066 0028     		cmp	r0, #0
 159 0068 0ED1     		bne	.L8
 194:Core/Src/main.c ****                               |RCC_PERIPHCLK_I2C1;
 160              		.loc 1 194 3 is_stmt 1 view .LVU41
 194:Core/Src/main.c ****                               |RCC_PERIPHCLK_I2C1;
 161              		.loc 1 194 38 is_stmt 0 view .LVU42
 162 006a 0B23     		movs	r3, #11
 163 006c 0093     		str	r3, [sp]
 196:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 164              		.loc 1 196 3 is_stmt 1 view .LVU43
 196:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 165              		.loc 1 196 38 is_stmt 0 view .LVU44
 166 006e 0023     		movs	r3, #0
 167 0070 0293     		str	r3, [sp, #8]
 197:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 168              		.loc 1 197 3 is_stmt 1 view .LVU45
 197:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 169              		.loc 1 197 38 is_stmt 0 view .LVU46
 170 0072 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccGRz4aL.s 			page 11


 198:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 171              		.loc 1 198 3 is_stmt 1 view .LVU47
 198:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 172              		.loc 1 198 36 is_stmt 0 view .LVU48
 173 0074 0593     		str	r3, [sp, #20]
 199:Core/Src/main.c ****   {
 174              		.loc 1 199 3 is_stmt 1 view .LVU49
 199:Core/Src/main.c ****   {
 175              		.loc 1 199 7 is_stmt 0 view .LVU50
 176 0076 6846     		mov	r0, sp
 177 0078 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 178              	.LVL5:
 199:Core/Src/main.c ****   {
 179              		.loc 1 199 6 view .LVU51
 180 007c 0028     		cmp	r0, #0
 181 007e 05D1     		bne	.L9
 203:Core/Src/main.c **** 
 182              		.loc 1 203 1 view .LVU52
 183 0080 1BB0     		add	sp, sp, #108
 184              		@ sp needed
 185 0082 00BD     		pop	{pc}
 186              	.L7:
 178:Core/Src/main.c ****   }
 187              		.loc 1 178 5 is_stmt 1 view .LVU53
 188 0084 FFF7FEFF 		bl	Error_Handler
 189              	.LVL6:
 190              	.L8:
 192:Core/Src/main.c ****   }
 191              		.loc 1 192 5 view .LVU54
 192 0088 FFF7FEFF 		bl	Error_Handler
 193              	.LVL7:
 194              	.L9:
 201:Core/Src/main.c ****   }
 195              		.loc 1 201 5 view .LVU55
 196 008c FFF7FEFF 		bl	Error_Handler
 197              	.LVL8:
 198              	.L11:
 199              		.align	2
 200              	.L10:
 201 0090 00700040 		.word	1073770496
 202 0094 FFE7FFFF 		.word	-6145
 203              		.cfi_endproc
 204              	.LFE48:
 206              		.section	.text.main,"ax",%progbits
 207              		.align	1
 208              		.global	main
 209              		.syntax unified
 210              		.code	16
 211              		.thumb_func
 213              	main:
 214              	.LFB47:
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 215              		.loc 1 70 1 view -0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\User\AppData\Local\Temp\ccGRz4aL.s 			page 12


 220              	.LCFI2:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 4, -8
 223              		.cfi_offset 14, -4
  72:Core/Src/main.c ****   /* USER CODE END 1 */
 224              		.loc 1 72 2 view .LVU57
 225              	.LVL9:
  78:Core/Src/main.c **** 
 226              		.loc 1 78 3 view .LVU58
 227 0002 FFF7FEFF 		bl	HAL_Init
 228              	.LVL10:
  85:Core/Src/main.c **** 
 229              		.loc 1 85 3 view .LVU59
 230 0006 FFF7FEFF 		bl	SystemClock_Config
 231              	.LVL11:
  92:Core/Src/main.c ****   MX_I2C1_Init();
 232              		.loc 1 92 3 view .LVU60
 233 000a FFF7FEFF 		bl	MX_GPIO_Init
 234              	.LVL12:
  93:Core/Src/main.c ****   MX_SPI1_Init();
 235              		.loc 1 93 3 view .LVU61
 236 000e FFF7FEFF 		bl	MX_I2C1_Init
 237              	.LVL13:
  94:Core/Src/main.c ****   MX_USART1_UART_Init();
 238              		.loc 1 94 3 view .LVU62
 239 0012 FFF7FEFF 		bl	MX_SPI1_Init
 240              	.LVL14:
  95:Core/Src/main.c ****   MX_USART2_UART_Init();
 241              		.loc 1 95 3 view .LVU63
 242 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 243              	.LVL15:
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 244              		.loc 1 96 3 view .LVU64
 245 001a FFF7FEFF 		bl	MX_USART2_UART_Init
 246              	.LVL16:
 100:Core/Src/main.c **** 
 247              		.loc 1 100 4 view .LVU65
 248 001e 0122     		movs	r2, #1
 249 0020 4021     		movs	r1, #64
 250 0022 0948     		ldr	r0, .L16
 251 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 252              	.LVL17:
 102:Core/Src/main.c ****    while (RadioBusy)	//wait for modem to turn on
 253              		.loc 1 102 4 view .LVU66
 103:Core/Src/main.c ****    {
 254              		.loc 1 103 4 view .LVU67
 102:Core/Src/main.c ****    while (RadioBusy)	//wait for modem to turn on
 255              		.loc 1 102 14 is_stmt 0 view .LVU68
 256 0028 0120     		movs	r0, #1
 103:Core/Src/main.c ****    {
 257              		.loc 1 103 10 view .LVU69
 258 002a 06E0     		b	.L13
 259              	.LVL18:
 260              	.L14:
 105:Core/Src/main.c ****    }
 261              		.loc 1 105 5 is_stmt 1 view .LVU70
 105:Core/Src/main.c ****    }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccGRz4aL.s 			page 13


 262              		.loc 1 105 17 is_stmt 0 view .LVU71
 263 002c 0121     		movs	r1, #1
 264 002e 0648     		ldr	r0, .L16
 265              	.LVL19:
 105:Core/Src/main.c ****    }
 266              		.loc 1 105 17 view .LVU72
 267 0030 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 268              	.LVL20:
 105:Core/Src/main.c ****    }
 269              		.loc 1 105 15 view .LVU73
 270 0034 431E     		subs	r3, r0, #1
 271 0036 9841     		sbcs	r0, r0, r3
 272 0038 C0B2     		uxtb	r0, r0
 273              	.LVL21:
 274              	.L13:
 103:Core/Src/main.c ****    {
 275              		.loc 1 103 11 is_stmt 1 view .LVU74
 276 003a 0028     		cmp	r0, #0
 277 003c F6D1     		bne	.L14
 107:Core/Src/main.c ****    sx126x_set_standby(&hspi1,cfg);
 278              		.loc 1 107 4 view .LVU75
 279              	.LVL22:
 108:Core/Src/main.c **** 
 280              		.loc 1 108 4 view .LVU76
 281 003e 0348     		ldr	r0, .L16+4
 282              	.LVL23:
 108:Core/Src/main.c **** 
 283              		.loc 1 108 4 is_stmt 0 view .LVU77
 284 0040 0021     		movs	r1, #0
 285 0042 FFF7FEFF 		bl	sx126x_set_standby
 286              	.LVL24:
 287              	.L15:
 145:Core/Src/main.c ****   {
 288              		.loc 1 145 3 is_stmt 1 discriminator 1 view .LVU78
 150:Core/Src/main.c ****   /* USER CODE END 3 */
 289              		.loc 1 150 3 discriminator 1 view .LVU79
 145:Core/Src/main.c ****   {
 290              		.loc 1 145 9 discriminator 1 view .LVU80
 291 0046 FEE7     		b	.L15
 292              	.L17:
 293              		.align	2
 294              	.L16:
 295 0048 00040050 		.word	1342178304
 296 004c 00000000 		.word	hspi1
 297              		.cfi_endproc
 298              	.LFE47:
 300              		.text
 301              	.Letext0:
 302              		.file 3 "c:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.2 rel1\\arm-none-eabi\\inclu
 303              		.file 4 "c:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.2 rel1\\arm-none-eabi\\inclu
 304              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l071xx.h"
 305              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 306              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 307              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc_ex.h"
 308              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 309              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 310              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_spi.h"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccGRz4aL.s 			page 14


 311              		.file 12 "Core/Inc/sx126x.h"
 312              		.file 13 "Core/Inc/usart.h"
 313              		.file 14 "Core/Inc/spi.h"
 314              		.file 15 "Core/Inc/i2c.h"
 315              		.file 16 "Core/Inc/gpio.h"
 316              		.file 17 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 317              		.file 18 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccGRz4aL.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\ccGRz4aL.s:19     .text.Error_Handler:00000000 $t
C:\Users\User\AppData\Local\Temp\ccGRz4aL.s:25     .text.Error_Handler:00000000 Error_Handler
C:\Users\User\AppData\Local\Temp\ccGRz4aL.s:57     .text.SystemClock_Config:00000000 $t
C:\Users\User\AppData\Local\Temp\ccGRz4aL.s:63     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\User\AppData\Local\Temp\ccGRz4aL.s:201    .text.SystemClock_Config:00000090 $d
C:\Users\User\AppData\Local\Temp\ccGRz4aL.s:207    .text.main:00000000 $t
C:\Users\User\AppData\Local\Temp\ccGRz4aL.s:213    .text.main:00000000 main
C:\Users\User\AppData\Local\Temp\ccGRz4aL.s:295    .text.main:00000048 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_I2C1_Init
MX_SPI1_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
HAL_GPIO_WritePin
HAL_GPIO_ReadPin
sx126x_set_standby
hspi1
